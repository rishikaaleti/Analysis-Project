# -*- coding: utf-8 -*-
"""Data Analytics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h_50hHYpuICyU-4hyvyhoCyLl8fvDMTJ
"""

import pandas as pd #for data analysis and processing
import numpy as np #for math
import statistics
import matplotlib.pyplot as plt
import plotly.express as px
import seaborn as sns

"""DataFrame"""

# https://drive.google.com/file/d/140pf5ISgMP96g4S6zJkd4PsS1PCuJnxU/view?usp=drive_link
url = 'https://drive.google.com/uc?id='
data ='140pf5ISgMP96g4S6zJkd4PsS1PCuJnxU'
df_psy = pd.read_csv(url+data)

df_psy

df_psy = df_psy.drop(df_psy.columns[0], axis = 1)
df_psy

"""Duplicates"""

dup = sum(df_psy.duplicated())
dup
print(dup/len(df_psy.index))

df_psy = df_psy.drop_duplicates()
dup = sum(df_psy.duplicated())
dup

"""Null Values"""

display(df_psy.info) # for info
display(df_psy.info()) # for null values

null = df_psy[df_psy.isna().any(axis=1)]
null

df_psy = df_psy.dropna()
df_psy

"""Outliers"""

var = df_psy['Q4']
fig = plt.figure(figsize =(5,3))
plt.boxplot(var)
plt.show()
px.box(var, points = 'all')

"""Removing outlier's in age"""

num = df_psy.drop(['married','orientation','religion'], axis = 1)
fig = px.box(num.melt(), y = "value", facet_col= 'variable', boxmode= 'overlay', color= 'variable')
fig.update_yaxes(matches= None)

maxage = df_psy['age'].max()
Maxage = df_psy[df_psy['age'] > 100]
Maxage
df_psy.drop(df_psy[df_psy['age'] > 100].index, inplace=True)
maxage = df_psy['age'].max()
maxage

"""Removing outliers from variable Q4"""

Q = df_psy[df_psy['Q4'] >8]
df_psy.drop(df_psy[df_psy['Q4'] > 8].index, inplace=True)
Q

Q = df_psy[df_psy['Q5'] >8]
df_psy.drop(df_psy[df_psy['Q5'] > 8].index, inplace=True)
Q

Q = df_psy[df_psy['Q11'] >8]
df_psy.drop(df_psy[df_psy['Q11'] > 8].index, inplace=True)
Q

num = df_psy.drop(['married','orientation','religion'], axis = 1)
fig = px.box(num.melt(), y = "value", facet_col= 'variable', boxmode= 'overlay', color= 'variable')
fig.update_yaxes(matches= None)

"""Removing False value in all rows"""

df_psy.married.unique()
df_psy.orientation.unique()

df_psy = df_psy[df_psy['religion'] != 'FALSE']
df_psy.religion.unique()

df_psy.married.unique()
df_psy.orientation.unique()
df_psy.religion.unique()

"""Conversion of categorical to numerical data."""

mapping_dict = {'Never': 1, 'Previously': 2, 'Married': 3, 'Second': 4}
df_psy['Marriage'] = df_psy['married'].map(mapping_dict)
df_psy

sex = {'Hetero': 1 , 'New Types': 2, 'Homo':3, 'Bi':4, 'Asexual':5}
df_psy['Sexuality'] = df_psy['orientation'].map(sex)
df_psy

rlgn = {'Other':1, 'Christian Other':2, 'Christian':3, 'Muslim':4, 'Atheist':5,
       'Protestant':6, 'Agnostic':7, 'Hindu':8, 'Buddhist':9,'Mormon':10,
       'Sikh':11, 'Jewish':12}
df_psy['Caste'] = df_psy['religion'].map(rlgn)
df_psy

"""Segmenting data to all numeric values"""

columns_to_drop = ['married', 'religion', 'orientation']
df_psy = df_psy.drop(columns=columns_to_drop)
df_psy
#data is ready for analysis

"""Statistical Analysis"""

mode_marriage = df_psy['Marriage'].mode()
mode_marriage
print(mode_marriage , mapping_dict)

mode_orientation = df_psy['Sexuality'].mode()
mode_orientation
print(mode_orientation, sex)

mode_religion = df_psy['Caste'].mode()
mode_religion
print(mode_religion, rlgn)

"""Mode"""

mode = [mode_marriage, mode_orientation, mode_religion]
mode

mean_age = df_psy['age'].mean()
mean_age

mean_values = df_psy.mean()
mean_values

"""Summary of statistical analysis - mean, std, min, max, etc"""

summary_stats = df_psy.describe()
summary_stats

"""**Visual Analysis**

Boxplot
"""

fig = plt.figure(figsize=(5, 4))
plt.boxplot(df_psy['Q8'])
plt.show()

"""Histogram"""

fig = plt.figure(figsize=(13, 5))
sns.countplot(x=df_psy['age'])
plt.xlabel('Age')
plt.ylabel('Value')
plt.title('BarPlot of Age')
plt.xticks(rotation = 90)
plt.show()
sns.histplot(x=df_psy['age'])
hisplot.show()

"""Percent of people aged above 55 and that is 0.1279"""

ages = df_psy[df_psy['age']>55]
len(ages.index)
print(len(ages.index)/df_psy.index)

"""Q3 - Anxiety"""

fig = plt.figure(figsize=(7, 5))
sns.countplot(x=df_psy['Q3'])
plt.xlabel('Anxiety Scale')
plt.ylabel('Value')
plt.title('Analysis of Anxiety')
plt.xticks(rotation = 90)
plt.show()

n = df_psy['Q3'].value_counts()
count= pd.DataFrame(n)
count

"""Arithematic functions for find the percentages of the above data

**Bivariate Analysis**
"""

plt.rcParams['figure.figsize']= (10,5)
sns.heatmap(df_psy.corr(),annot= True, cmap = 'BuPu')
plt.title('HeatMap', fontsize= 25)
plt.show()

"""There is a correlation between most of the coloumns."""

plt.rcParams['figure.figsize'] = (10, 4)

sns.boxplot(x= df_psy['Q6'], y= df_psy['Q9'])
plt.title("Correlation of Careless and Negative Feeling")
plt.show()

"""Anixiety is directly related to negativity."""

df_psy.loc[df_psy['age'] >= 0, 'agegroup'] = '20'
df_psy.loc[df_psy['age'] >= 20, 'agegroup'] = '40'
df_psy.loc[df_psy['age'] >= 40, 'agegroup'] = '60'
df_psy.loc[df_psy['age'] >= 60, 'agegroup'] = '80'
df_psy.loc[df_psy['age'] >= 80, 'agegroup'] = '100'
df_psy

sns.set_style('whitegrid')
plt.rcParams['figure.figsize'] = (6, 6)
sns.boxplot(x= df_psy['agegroup'], y= df_psy['Q6'])
plt.title("Correlation of Careless and Agegroup")
plt.show()

"""Stress is decreasing with the age and in young age the stress is reltively high.

**Report**

Creating a notebook for the univariate and bivariate analysis
"""

!pip install pandas-profiling
import pandas_profiling as pp

# Generate the profile report
report = pp.ProfileReport(df_psy)

# Display the report
report

"""Multivariate Analysis"""

sns.FacetGrid(df_psy, hue = 'Marriage', height = 5 ).map(plt.scatter, 'age','Sexuality').add_legend()
plt.show()

"""Most of the Asexual people are married at any given age. Most of the hetero sexual people are in a second marriage."""

